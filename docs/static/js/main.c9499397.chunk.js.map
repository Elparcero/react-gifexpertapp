{"version":3,"sources":["components/AddCategory.js","components/GrifGridItem.js","helpers/getGifs.js","components/GifGrif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GrifGridItem","title","url","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrif","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGcA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAqBhD,OACI,oCACI,0BAAMC,SAdQ,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OASV,2BACIO,KAAO,OACPC,MAAQT,EACRU,SAtBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,aCPlBG,EAAe,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAEnC,OACI,yBAAKC,UAAW,8CACZ,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAMA,EAAN,O,uBCLCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCK,EADpC,+DAEAE,MAAOP,GAFP,cAEbQ,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZW,GAbY,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EACfpB,mBAAS,CAC/ByB,KAAM,GACNQ,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAmBzC,OAbAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GAEHC,QAAQC,IAAIF,GACZH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAAEb,IAEEc,EDhB0BO,CAAcrB,GAAlCU,EAFwB,EAE7BL,KAAaQ,EAFgB,EAEhBA,QAErB,OAEI,oCACA,wBAAIjB,UAAW,qCAAf,IAAsDI,EAAtD,KAECa,GAAW,uBAAGjB,UAAW,oCAAd,WAEZ,yBAAKA,UAAW,aAEJc,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIc,IAAQd,EAAIC,IACPD,UEhBpBe,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,eAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAS9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQ6C,EAAWjB,KAAK,SAAAP,GAAQ,OACpB,kBAAC,EAAD,CACIsB,IAAOtB,EACPA,SAAYA,U,MChBxCyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c9499397.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n export const AddCategory = ( { setCategories} ) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmbit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            \n            setCategories( cats => [inputValue, ...cats,]);\n            setInputValue('');\n\n        }\n\n    }\n\n    return (\n        <>\n            <form onSubmit = {handleSubmbit}>\n                <input \n                    type = \"text\"\n                    value ={inputValue}\n                    onChange = { handleInputChange }\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GrifGridItem = ( { title, url } ) => {\n\n    return (\n        <div className= \"card animate__animated animate__backInLeft\">\n            <img src={url} alt={title} />\n            <p> { title } </p>\n        </div>\n    )\n}\n","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ category }&limit=10&api_key=PCi8F03aS1TP7skh2DoAJnxZJz3KARkO`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n} ","import React from 'react'\nimport { GrifGridItem } from './GrifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrif = (Â {category} ) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n\n        <>\n        <h3 className= \"animate__animated animate__fadeIn\"> { category } </h3>\n\n        {loading && <p className= \"animate__animated animate__flash\">Loading</p>}\n\n        <div className= \"card-grid\">               \n                {\n                    images.map( img => (\n                        <GrifGridItem \n                            key = { img.id }\n                            { ...img } \n                        />\n                    ) )\n                }\n                \n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const  useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n\n                console.log(imgs);\n                setState({\n                    data: imgs,\n                    loading: false\n                });            \n\n            })\n    }, [ category ]);\n\n    return state; // { data [], loading: true };\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrif } from './components/GifGrif';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['Spider man'])\n\n    // const handleAdd = () => {\n    //     //setCategories( ['Aquaman' , ...categories] );\n    //     setCategories( cats => [...categories, 'Aquaman'] );\n    // }\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrif \n                            key = {category}\n                            category = {category} /> \n\n                    ))\n                }\n            </ol>\n\n\n        </>\n     );\n    \n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}